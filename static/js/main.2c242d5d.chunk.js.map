{"version":3,"sources":["components/ui/CardColor/types/CardColors.ts","components/ui/Navbar/Navbar.tsx","config/index.ts","api/ClientApi.ts","components/ui/Spinner/Spinner.tsx","components/ui/CardColor/CardColor.tsx","components/ChartVerticalBar/ChartVerticalBar.tsx","hooks/useAsync.ts","screens/pages/DashboardPage/DashboardPage.tsx","api/validations/client.validation.ts","utils/utils.ts","components/ui/HelpText/HelpText.tsx","components/FormClient/FormClient.tsx","components/DataTableClients/DataTableClients.tsx","screens/pages/HomePage/HomePage.tsx","screens/pages/PromedioPage/PromedioPage.tsx","routers/AppRouter.tsx","App.tsx","index.tsx"],"names":["CardColors","defaultProps","Navbar","props","className","activeClassName","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","API_URL","urlClients","config","clientApi","a","axios","get","response","data","client","post","text","Spinner","bgColor","PRIMARY","CardColor","title","children","headerText","ChartVerticalBar","dataSet","labels","Object","keys","datasets","label","values","backgroundColor","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","useAsync","funtion","useState","loading","setLoading","error","setError","res","setRes","refresh","setRefresh","useEffect","refreshData","DashboardPage","getDataDashboard","data-testid","DARK","averageAge","DANGER","clientsRegistereds","clientsAdults","INFO","src","alt","clientsLetters","createClientSchema","Yup","name","required","max","lastname","dateBirthday","defined","showErrors","length","HelpText","visible","FormClient","saveClient","initialProduct","useFormik","initialValues","onSubmit","resetForm","validationSchema","handleChange","handleSubmit","errors","isValid","action","html-for","onChange","value","placeholder","aria-describedby","disabled","DataTableClients","columns","selector","row","sortable","pagination","fixedHeader","fixedHeaderScrollHeight","HomePage","getAll","create","newClient","toast","PromedioPage","width","height","AppRouter","path","component","exact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c242d5d.chunk.js","sourcesContent":["export enum CardColors {\n    PRIMARY = \"bg-primary\",\n    SECONDARY = \"bg-secondary\",\n    SUCCESS = \"bg-success\",\n    DANGER = \"bg-danger\",\n    WARNING = \"bg-warning\",\n    INFO = \"bg-info\",\n    LIGHT = \"bg-light\",\n    DARK = \"bg-dark\",\n}","import { NavLink } from \"react-router-dom\";\n\ninterface MyProps {}\nconst defaultProps = {};\nconst Navbar = (props: MyProps) => {\n  props = { ...defaultProps, ...props };\n  const {} = props;\n  return (\n    <nav className=\" navbar navbar-expand-lg navbar-dark bg-primary\">\n      <NavLink activeClassName=\"active\" to=\"/\" className=\"px-3 py-2 navbar-brand\">\n        React Full Stack\n      </NavLink>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <NavLink\n              activeClassName=\"active\"\n              to=\"/averageAge\"\n              className=\"px-3 py-2 nav-link\"\n            >\n              Average Age\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink\n              activeClassName=\"active\"\n              to=\"/dashboard\"\n              className=\"px-3 py-2 nav-link\"\n            >\n              Dashboard\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","const prod = true;\nexport default {\n    API_URL: prod ? \"https://reto-fullstack.herokuapp.com\" : \"http://localhost:8090\"\n}","import { Client } from \"./entitys/client.entity\";\nimport config from '../config';\nimport axios from \"axios\";\nimport { UpdateClientDto } from \"./dto/update-client.dto\";\nimport { DashboardData } from \"./entitys/dashboard.entity\";\n\nconst urlClients = `${config.API_URL}/api/clients`;\n\nexport class ClientApi {\n\n    async getAll(): Promise<UpdateClientDto[]> {\n        let response = await axios.get(urlClients);\n        return (response.data) as UpdateClientDto[];\n    }\n\n    async getDataDashboard(): Promise<DashboardData> {\n        let response = await axios.get(`${urlClients}/dashboard`);\n        return (response.data) as DashboardData;\n    }\n\n    async create(client: Client): Promise<UpdateClientDto> {\n        let response = await axios.post(urlClients, client);\n        return (response.data) as UpdateClientDto;\n    }\n\n}\n\nexport const clientApi = new ClientApi();","import \"./Spinner.css\";\ninterface MyProps {\n  text?: string;\n}\nconst defaultProps = {\n  text: \"Loading...\",\n};\nconst Spinner = (props: MyProps) => {\n  props = { ...defaultProps, ...props };\n  const { text } = props;\n  return <div className=\"loader\">{text}</div>;\n};\n\nexport default Spinner;\n","import { CardColors } from \"./types/CardColors\";\n\ninterface MyProps {\n  bgColor?: CardColors;\n  headerText: string;\n  title: string;\n  children?: JSX.Element | undefined | string;\n}\nconst defaultProps = {\n  bgColor: CardColors.PRIMARY,\n};\n\nconst CardColor = (props: MyProps) => {\n  props = { ...defaultProps, ...props };\n  const { bgColor, title, children, headerText } = props;\n  return (\n    <div className={`card text-white ${bgColor} mb-3 mx-2 w-100 h-100`}>\n      <div className=\"card-header\">{headerText}</div>\n      <div className=\"card-body d-flex align-items-center justify-content-center flex-column\">\n        <h5 className=\"card-title\">{title}</h5>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default CardColor;\n","import { Bar } from \"react-chartjs-2\";\n\ninterface MyProps {\n  dataSet: any;\n}\nconst ChartVerticalBar = (props: MyProps) => {\n  const { dataSet } = props;\n  if (!dataSet) return <h2>No hay data que mostrar</h2>;\n\n  const data = {\n    labels: Object.keys(dataSet),\n    datasets: [\n      {\n        label: \"# of Clients\",\n        data: Object.values(dataSet),\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.2)\",\n          \"rgba(54, 162, 235, 0.2)\",\n          \"rgba(255, 206, 86, 0.2)\",\n          \"rgba(75, 192, 192, 0.2)\",\n          \"rgba(153, 102, 255, 0.2)\",\n          \"rgba(255, 159, 64, 0.2)\",\n        ],\n        borderColor: [\n          \"rgba(255, 99, 132, 1)\",\n          \"rgba(54, 162, 235, 1)\",\n          \"rgba(255, 206, 86, 1)\",\n          \"rgba(75, 192, 192, 1)\",\n          \"rgba(153, 102, 255, 1)\",\n          \"rgba(255, 159, 64, 1)\",\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n  return (\n    <>\n      <div className=\"header\">\n        <h3 className=\"title\">Number of clients with a certain letter</h3>\n      </div>\n      <Bar data={data} options={options} />\n    </>\n  );\n};\n\nexport default ChartVerticalBar;\n","import { useEffect, useState } from \"react\";\n\nexport const useAsync = <T>(funtion: any) => {\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState<any>();\n    const [res, setRes] = useState<T>();\n    const [refresh, setRefresh] = useState(false);\n\n    const refreshData = () => {\n        setRefresh(!refresh);\n        setLoading(true);\n    };\n    useEffect(() => {\n        (async () => {\n            try {\n                let data = await funtion();\n                setLoading(false);\n                setRes(data);\n            } catch (error: any) {\n                setError(\"Error en el Servidor 500\");\n            }\n        })();\n    }, [refresh]);\n    return { loading, res, error, refreshData }\n}","import { clientApi } from \"../../../api/ClientApi\";\nimport { DashboardData } from \"../../../api/entitys/dashboard.entity\";\nimport Spinner from \"../../../components/ui/Spinner/Spinner\";\nimport CardColor from \"../../../components/ui/CardColor/CardColor\";\nimport { CardColors } from \"../../../components/ui/CardColor/types/CardColors\";\nimport ChartVerticalBar from \"../../../components/ChartVerticalBar/ChartVerticalBar\";\nimport { useAsync } from \"../../../hooks/useAsync\";\n\ninterface MyProps {}\nconst defaultProps = {};\nconst DashboardPage = (props: MyProps) => {\n  props = { ...defaultProps, ...props };\n  const {} = props;\n\n  const { error, loading, res } = useAsync<DashboardData>(\n    clientApi.getDataDashboard\n  );\n  return (\n    <div data-testid=\"DashboardPage\" className=\"fadein\">\n      <h1 className=\"my-4 text-center\">Dashboard</h1>\n      <div className=\"row justify-content-center\">\n        {loading ? (\n          <Spinner />\n        ) : (\n          <>\n            <div className=\"col-md-5\">\n              <div className=\"row\">\n                <div className=\"col-md-6 p-2\">\n                  <CardColor\n                    bgColor={CardColors.DARK}\n                    headerText=\"Information\"\n                    title=\"Average Ages\"\n                  >\n                    <div className=\"card-text\">\n                      <b>{res?.averageAge}</b> years old\n                    </div>\n                  </CardColor>\n                </div>\n                <div className=\"col-md-6 p-2\">\n                  <CardColor\n                    bgColor={CardColors.DANGER}\n                    headerText=\"Information\"\n                    title=\"Customers Registered Today\"\n                  >\n                    <div className=\"card-text\">\n                      <b>{res?.clientsRegistereds}</b> clients\n                    </div>\n                  </CardColor>\n                </div>\n\n                <div className=\"col-md-6 p-2\">\n                  <CardColor\n                    bgColor={CardColors.PRIMARY}\n                    headerText=\"Clients Adults\"\n                    title=\"Clients Adults +18\"\n                  >\n                    <div className=\"card-text\">\n                      <b>{res?.clientsAdults}</b> clients\n                    </div>\n                  </CardColor>\n                </div>\n\n                <div className=\"col-md-6 p-2\">\n                  <CardColor\n                    bgColor={CardColors.INFO}\n                    headerText=\"Image Ramdom\"\n                    title=\"\"\n                  >\n                    <div className=\"card-text\">\n                      <img\n                        src=\"https://picsum.photos/200\"\n                        alt=\"img-ramdom\"\n                        className=\"img-fluid rounded-circle\"\n                        // width=\"100%\"\n                        // height=\"100%\"\n                      />\n                    </div>\n                  </CardColor>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-7 my-2\">\n              <ChartVerticalBar dataSet={res?.clientsLetters} />x\n            </div>\n          </>\n        )}\n        {error && <h2>Ocurrio un error: {error}</h2>}\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardPage;\n","import * as Yup from 'yup';\n\nexport const createClientSchema = Yup.object({\n    name: Yup.string().required().max(100),\n    lastname: Yup.string().required().max(100),\n    dateBirthday: Yup.date().required(),\n}).defined();\n","export const showErrors = (error: any): boolean => {\n    if (!error || error.length > 0) {\n        return true;\n    }\n    return true;\n};\n\nexport const formatDate = (dateIn: Date): string => {\n    return dateIn.toISOString().split('T')[0]\n}\n\nexport const getAgeByDate = (date: Date): string => {\n    let yearCurrent = new Date().getFullYear();\n    if (yearCurrent < date.getFullYear()) {\n        return \"0\";\n    }\n    return (yearCurrent - date.getFullYear()).toString();\n}","interface MyProps {\n  visible: boolean;\n  children?: JSX.Element | undefined | string;\n}\nconst HelpText = (props: MyProps) => {\n  const { visible, children } = props;\n  if (!visible) return <></>;\n\n  return <p className=\"text-left form-text text-danger my-1\">{children}</p>;\n};\n\nexport default HelpText;\n","import { useFormik } from \"formik\";\nimport { CreateClientDto } from \"../../api/dto/create-client.dto\";\nimport { Client } from \"../../api/entitys/client.entity\";\nimport { createClientSchema } from \"../../api/validations/client.validation\";\nimport { showErrors } from \"../../utils/utils\";\nimport HelpText from \"../ui/HelpText/HelpText\";\n\ninterface MyProps {\n  saveClient(client: CreateClientDto): void;\n}\nconst FormClient = (props: MyProps) => {\n  const { saveClient } = props;\n\n  const initialProduct: Client = {\n    name: \"\",\n    lastname: \"\",\n    dateBirthday: \"\",\n  };\n\n  const { handleChange, handleSubmit, values, errors, isValid } = useFormik({\n    initialValues: initialProduct,\n    onSubmit: (values: Client, { resetForm }) => {\n      // reseteo el formulario despues de crear el registro\n      saveClient(values);\n      resetForm({\n        values: initialProduct,\n      });\n    },\n    validationSchema: createClientSchema,\n  });\n  return (\n    <div data-testid=\"FormClient\" className=\"\">\n      <form action=\"\" onSubmit={handleSubmit}>\n        <div className=\"my-2\">\n          <div className=\"form-group my-2 text-left\">\n            <label html-for=\"name\" className=\"text-left\">\n              Name:\n            </label>\n            <input\n              id=\"name\"\n              onChange={handleChange}\n              value={values.name}\n              type=\"text\"\n              name=\"name\"\n              className=\"form-control\"\n              placeholder=\"Example: Maximo\"\n              aria-describedby=\"helpId\"\n            />\n          </div>\n          <HelpText visible={showErrors(errors.name)}>{errors.name}</HelpText>\n\n          <div className=\"form-group my-2 text-left\">\n            <label html-for=\"lastname\">Lastname:</label>\n            <input\n              id=\"lastname\"\n              onChange={handleChange}\n              value={values.lastname}\n              type=\"text\"\n              name=\"lastname\"\n              placeholder=\"Example: Apaza\"\n              className=\"form-control\"\n            />\n          </div>\n          <HelpText visible={showErrors(errors.lastname)}>\n            {errors.lastname}\n          </HelpText>\n\n          <div className=\"form-group my-2 text-left\">\n            <label html-for=\"dateBirthday\">Date Birthday:</label>\n            <input\n              id=\"dateBirthday\"\n              onChange={handleChange}\n              value={values.dateBirthday}\n              type=\"date\"\n              name=\"dateBirthday\"\n              placeholder=\"Example: Apaza\"\n              className=\"form-control\"\n            />\n          </div>\n          <HelpText visible={showErrors(errors.dateBirthday)}>\n            {errors.dateBirthday}\n          </HelpText>\n        </div>\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary btn-lg d-block w-100\"\n          disabled={!isValid}\n        >\n          Save\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default FormClient;\n","import Datatable from \"react-data-table-component\";\nimport { UpdateClientDto } from \"../../api/dto/update-client.dto\";\ninterface MyProps {\n  data: UpdateClientDto[];\n}\nconst DataTableClients = (props: MyProps) => {\n  let { data } = props;\n  const columnas = [\n    {\n      name: \"Name\",\n      selector: (row: any) => row.name,\n      sortable: false,\n    },\n    {\n      name: \"LastName\",\n      selector: (row: any) => row.lastname,\n      sortable: false,\n    },\n    {\n      name: \"dateBirthday\",\n      selector: (row: any) => row.dateBirthday,\n      sortable: false,\n    },\n  ];\n  return (\n    <div data-testid=\"DataTableClients\" className=\"table-responsive\">\n      <Datatable\n        columns={columnas}\n        data={data as any}\n        pagination\n        fixedHeader\n        fixedHeaderScrollHeight=\"600px\"\n      />\n    </div>\n  );\n};\n\nexport default DataTableClients;\n","import { clientApi } from \"../../../api/ClientApi\";\nimport { CreateClientDto } from \"../../../api/dto/create-client.dto\";\nimport { UpdateClientDto } from \"../../../api/dto/update-client.dto\";\nimport ClientsTable from \"../../../components/ClientsTable/ClientsTable\";\nimport FormClient from \"../../../components/FormClient/FormClient\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Spinner from \"../../../components/ui/Spinner/Spinner\";\nimport { useAsync } from \"../../../hooks/useAsync\";\nimport DataTableClients from \"../../../components/DataTableClients/DataTableClients\";\nimport { getAgeByDate } from \"../../../utils/utils\";\n\ninterface MyProps {}\nconst defaultProps = {};\nconst HomePage = (props: MyProps) => {\n  props = { ...defaultProps, ...props };\n  const {} = props;\n  const { error, loading, res, refreshData } = useAsync<UpdateClientDto[]>(\n    clientApi.getAll\n  );\n\n  const saveClient = async (client: CreateClientDto) => {\n    try {\n      let newClient = await clientApi.create(client);\n      refreshData();\n      toast(`New Customer ${newClient.name} ${newClient.lastname}`, {\n        type: \"success\",\n      });\n    } catch (error) {\n      toast(`Error: ${error}`, {\n        type: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div data-testid=\"HomePage\" className=\"fadein\">\n      <ToastContainer />\n      <h1 className=\"my-4\">Customers</h1>\n\n      <div className=\"row\">\n        <div className=\"col-md-4\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <div className=\"card-title\">\n                <h3>Create Customer</h3>\n              </div>\n              <FormClient saveClient={saveClient} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-md-8\">\n          {loading ? (\n            <>\n              <h1>Cargando Clientes.....</h1>\n              <Spinner />\n            </>\n          ) : (\n            <>\n              <h2 className=\"mx-2\">List of Customers</h2>\n              <DataTableClients data={res ?? []} />\n              {/* <ClientsTable data={res ?? []} /> */}\n            </>\n          )}\n          {error && <h2>Ocurrio un error: {error}</h2>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import { clientApi } from \"../../../api/ClientApi\";\nimport { DashboardData } from \"../../../api/entitys/dashboard.entity\";\nimport Spinner from \"../../../components/ui/Spinner/Spinner\";\nimport { useAsync } from \"../../../hooks/useAsync\";\n\ninterface MyProps {}\nconst defaultProps = {};\nconst PromedioPage = (props: MyProps) => {\n  props = { ...defaultProps, ...props };\n  const {} = props;\n  const { error, loading, res } = useAsync<DashboardData>(\n    clientApi.getDataDashboard\n  );\n\n  return (\n    <div data-testid=\"PromedioPage\" className=\"fadein\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-8\">\n          {loading ? (\n            <>\n              <Spinner />\n            </>\n          ) : (\n            <>\n              <h1 className=\"my-4\">\n                Average age of customers: <b>{res?.averageAge}</b> years old\n              </h1>\n              <img\n                className=\"rounded\"\n                width=\"100%\"\n                height=\"400\"\n                src={\n                  (res?.averageAge ?? 0) >= 18\n                    ? \"https://e00-expansion.uecdn.es/assets/multimedia/imagenes/2018/03/05/15202825364825.jpg\"\n                    : \"https://cnnespanol.cnn.com/wp-content/uploads/2015/10/life-and-work-balance.png?w=460&h=260&crop=1\"\n                }\n                alt=\"img-average\"\n              />\n            </>\n          )}\n          {error && <h2>Ocurrio un error: {error}</h2>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PromedioPage;\n","import {\n  Redirect,\n  Route,\n  HashRouter as Router,\n  Switch,\n} from \"react-router-dom\";\nimport Navbar from \"../components/ui/Navbar/Navbar\";\nimport DashboardPage from \"../screens/pages/DashboardPage/DashboardPage\";\nimport HomePage from \"../screens/pages/HomePage/HomePage\";\nimport PromedioPage from \"../screens/pages/PromedioPage/PromedioPage\";\n\nconst AppRouter = () => {\n  return (\n    <Router>\n      <Navbar />\n      <div className=\"container p-4\">\n        <Switch>\n          <Route path=\"/dashboard\" component={DashboardPage} />\n          <Route path=\"/averageAge\" component={PromedioPage} />\n          <Route exact path=\"/\" component={HomePage} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import AppRouter from \"./routers/AppRouter\";\n\nfunction App() {\n  return <AppRouter />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}